'use client';

import { useState } from 'react';
import { useResumeStore } from '@/lib/store';
import { recommendCareerPath } from '@/ai/flows/career-path-recommender';
import { type RecommendCareerPathOutput } from '@/ai/flows/schemas';
import { ResumeData } from '@/lib/types';
import { useToast } from '@/hooks/use-toast';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Route, Zap, Lightbulb, CheckCircle, Bot } from 'lucide-react';
import { Skeleton } from './ui/skeleton';

export default function CareerPathRecommender() {
  const { toast } = useToast();
  const resumeData = useResumeStore((state) => state.data);
  const [isLoading, setIsLoading] = useState(false);
  const [careerPath, setCareerPath] = useState<RecommendCareerPathOutput | null>(null);

  const handleRecommendPath = async () => {
    if (!resumeData.desiredJobRoles) {
      toast({
        variant: 'destructive',
        title: 'Career Goal Required',
        description: 'Please specify your desired job roles in your profile first.',
      });
      return;
    }
    setIsLoading(true);
    setCareerPath(null);
    try {
      const result = await recommendCareerPath(resumeData as ResumeData);
      setCareerPath(result);
    } catch (error) {
      console.error(error);
      toast({
        variant: 'destructive',
        title: 'Error',
        description: 'Failed to generate career path. Please try again.',
      });
    }
    setIsLoading(false);
  };
  
  const renderLoadingSkeleton = () => (
    <div className="mt-6 space-y-4">
        <Skeleton className="h-8 w-3/4" />
        <Skeleton className="h-4 w-full" />
        <Skeleton className="h-4 w-5/6" />
        <div className="mt-4 space-y-3">
            <div className="flex items-start gap-4">
                <Skeleton className="h-10 w-10 rounded-full" />
                <div className="space-y-2 flex-1">
                    <Skeleton className="h-4 w-48" />
                    <Skeleton className="h-3 w-32" />
                    <Skeleton className="h-10 w-full" />
                </div>
            </div>
             <div className="flex items-start gap-4">
                <Skeleton className="h-10 w-10 rounded-full" />
                <div className="space-y-2 flex-1">
                    <Skeleton className="h-4 w-48" />
                    <Skeleton className="h-3 w-32" />
                </div>
            </div>
        </div>
    </div>
  );

  return (
    <Card>
      <CardHeader>
        <CardTitle className="font-heading flex items-center">
          <Route className="mr-2 h-6 w-6 text-primary" /> AI Career Roadmap
        </CardTitle>
        <CardDescription>
          Get a personalized, step-by-step career path generated by AI based on your profile and goals.
        </CardDescription>
      </CardHeader>
      <CardContent>
        <Button onClick={handleRecommendPath} disabled={isLoading} className="w-full">
          {isLoading ? 'Building Your Roadmap...' : 'Generate My Career Path'}
          <Zap className="ml-2 h-4 w-4" />
        </Button>

        {isLoading && renderLoadingSkeleton()}

        {careerPath && (
          <div className="mt-6 space-y-6">
            <div>
              <h3 className="font-heading text-lg font-semibold flex items-center"><Lightbulb className="mr-2 h-5 w-5 text-yellow-400" /> AI-Powered Summary</h3>
              <p className="text-muted-foreground mt-2 text-sm">{careerPath.overallSummary}</p>
            </div>
            
            <div className="relative">
              <div className="absolute left-5 top-5 -bottom-5 w-0.5 bg-border -z-10" />
                <ul className="space-y-8">
                  {careerPath.roadmap.map((step, index) => (
                    <li key={index} className="relative flex items-start gap-4">
                      <div className="z-10 flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary text-primary-foreground font-bold">
                        {index + 1}
                      </div>
                      <div className="flex-1">
                        <p className="font-bold text-base font-heading">{step.title}</p>
                        <p className="text-xs text-muted-foreground">{step.duration}</p>
                        <p className="mt-2 text-sm text-muted-foreground">{step.summary}</p>
                        <div className="mt-3">
                          <p className="font-semibold text-sm mb-2">Key Skills to Develop:</p>
                          <ul className="space-y-1">
                            {step.skillsToDevelop.map((skill) => (
                              <li key={skill} className="flex items-center gap-2 text-sm text-muted-foreground">
                                <CheckCircle className="h-4 w-4 text-green-500 shrink-0" />
                                <span>{skill}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
          </div>
        )}

        {!isLoading && !careerPath && (
            <div className="text-center text-muted-foreground mt-8 p-4 border border-dashed rounded-lg bg-muted/50">
                <Bot className="mx-auto h-8 w-8 mb-2 text-primary/80" />
                <p>Your personalized career roadmap will appear here.</p>
            </div>
        )}
      </CardContent>
    </Card>
  );
}

{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants }\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/AppLogo.tsx"],"sourcesContent":["import { Bot } from 'lucide-react';\r\n\r\nexport function AppLogo() {\r\n  return (\r\n    <div className=\"flex items-center space-x-2\">\r\n      <Bot className=\"h-6 w-6 text-primary\" />\r\n      <span className=\"font-heading font-bold text-xl\">CareerPilot</span>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,mMAAA,CAAA,MAAG;gBAAC,WAAU;;;;;;0BACf,6LAAC;gBAAK,WAAU;0BAAiC;;;;;;;;;;;;AAGvD;KAPgB","debugId":null}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\nimport { X } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Sheet = SheetPrimitive.Root\r\n\r\nconst SheetTrigger = SheetPrimitive.Trigger\r\n\r\nconst SheetClose = SheetPrimitive.Close\r\n\r\nconst SheetPortal = SheetPrimitive.Portal\r\n\r\nconst SheetOverlay = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))\r\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\r\n\r\nconst sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\",\r\n    },\r\n  }\r\n)\r\n\r\ninterface SheetContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\r\n    VariantProps<typeof sheetVariants> {}\r\n\r\nconst SheetContent = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Content>,\r\n  SheetContentProps\r\n>(({ side = \"right\", className, children, ...props }, ref) => (\r\n  <SheetPortal>\r\n    <SheetOverlay />\r\n    <SheetPrimitive.Content\r\n      ref={ref}\r\n      className={cn(sheetVariants({ side }), className)}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </SheetPrimitive.Close>\r\n    </SheetPrimitive.Content>\r\n  </SheetPortal>\r\n))\r\nSheetContent.displayName = SheetPrimitive.Content.displayName\r\n\r\nconst SheetHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetHeader.displayName = \"SheetHeader\"\r\n\r\nconst SheetFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\nSheetFooter.displayName = \"SheetFooter\"\r\n\r\nconst SheetTitle = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetTitle.displayName = SheetPrimitive.Title.displayName\r\n\r\nconst SheetDescription = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSheetDescription.displayName = SheetPrimitive.Description.displayName\r\n\r\nexport {\r\n  Sheet,\r\n  SheetPortal,\r\n  SheetOverlay,\r\n  SheetTrigger,\r\n  SheetClose,\r\n  SheetContent,\r\n  SheetHeader,\r\n  SheetFooter,\r\n  SheetTitle,\r\n  SheetDescription,\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,qKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,qKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,qKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,qKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,qKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,qKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/dropdown-menu.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\r\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst DropdownMenu = DropdownMenuPrimitive.Root\r\n\r\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\r\n\r\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\r\n\r\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\r\n\r\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\r\n\r\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\r\n\r\nconst DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRight className=\"ml-auto\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))\r\nDropdownMenuSubTrigger.displayName =\r\n  DropdownMenuPrimitive.SubTrigger.displayName\r\n\r\nconst DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSubContent.displayName =\r\n  DropdownMenuPrimitive.SubContent.displayName\r\n\r\nconst DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))\r\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\r\n\r\nconst DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\r\n\r\nconst DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Check className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))\r\nDropdownMenuCheckboxItem.displayName =\r\n  DropdownMenuPrimitive.CheckboxItem.displayName\r\n\r\nconst DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <Circle className=\"h-2 w-2 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))\r\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\r\n\r\nconst DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\r\n\r\nconst DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))\r\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\r\n\r\nconst DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\r\n\r\nexport {\r\n  DropdownMenu,\r\n  DropdownMenuTrigger,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuCheckboxItem,\r\n  DropdownMenuRadioItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuShortcut,\r\n  DropdownMenuGroup,\r\n  DropdownMenuPortal,\r\n  DropdownMenuSub,\r\n  DropdownMenuSubContent,\r\n  DropdownMenuSubTrigger,\r\n  DropdownMenuRadioGroup,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 515, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/DarkModeToggle.tsx"],"sourcesContent":["'use client';\r\n\r\nimport * as React from 'react';\r\nimport { Moon, Sun } from 'lucide-react';\r\nimport { useTheme } from 'next-themes';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuTrigger,\r\n} from '@/components/ui/dropdown-menu';\r\n\r\nexport function DarkModeToggle() {\r\n  const { setTheme } = useTheme();\r\n\r\n  return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button variant=\"ghost\" size=\"icon\">\r\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\r\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\r\n          <span className=\"sr-only\">Toggle theme</span>\r\n        </Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent align=\"end\">\r\n        <DropdownMenuItem onClick={() => setTheme('light')}>\r\n          Light\r\n        </DropdownMenuItem>\r\n        <DropdownMenuItem onClick={() => setTheme('dark')}>\r\n          Dark\r\n        </DropdownMenuItem>\r\n        <DropdownMenuItem onClick={() => setTheme('system')}>\r\n          System\r\n        </DropdownMenuItem>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAAA;AACA;AAEA;AACA;;;AAPA;;;;;AAcO,SAAS;;IACd,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAE5B,qBACE,6LAAC,+IAAA,CAAA,eAAY;;0BACX,6LAAC,+IAAA,CAAA,sBAAmB;gBAAC,OAAO;0BAC1B,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAQ,MAAK;;sCAC3B,6LAAC,mMAAA,CAAA,MAAG;4BAAC,WAAU;;;;;;sCACf,6LAAC,qMAAA,CAAA,OAAI;4BAAC,WAAU;;;;;;sCAChB,6LAAC;4BAAK,WAAU;sCAAU;;;;;;;;;;;;;;;;;0BAG9B,6LAAC,+IAAA,CAAA,sBAAmB;gBAAC,OAAM;;kCACzB,6LAAC,+IAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAU;;;;;;kCAGpD,6LAAC,+IAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAS;;;;;;kCAGnD,6LAAC,+IAAA,CAAA,mBAAgB;wBAAC,SAAS,IAAM,SAAS;kCAAW;;;;;;;;;;;;;;;;;;AAM7D;GAzBgB;;QACO,mJAAA,CAAA,WAAQ;;;KADf","debugId":null}},
    {"offset": {"line": 632, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/hooks/use-mobile.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nconst MOBILE_BREAKPOINT = 768\r\n\r\nexport function useIsMobile() {\r\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\r\n\r\n  React.useEffect(() => {\r\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\r\n    const onChange = () => {\r\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\r\n    }\r\n    mql.addEventListener(\"change\", onChange)\r\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\r\n    return () => mql.removeEventListener(\"change\", onChange)\r\n  }, [])\r\n\r\n  return !!isMobile\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,oBAAoB;AAEnB,SAAS;;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAc,AAAD,EAAuB;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAe,AAAD;iCAAE;YACd,MAAM,MAAM,OAAO,UAAU,CAAC,CAAC,YAAY,EAAE,oBAAoB,EAAE,GAAG,CAAC;YACvE,MAAM;kDAAW;oBACf,YAAY,OAAO,UAAU,GAAG;gBAClC;;YACA,IAAI,gBAAgB,CAAC,UAAU;YAC/B,YAAY,OAAO,UAAU,GAAG;YAChC;yCAAO,IAAM,IAAI,mBAAmB,CAAC,UAAU;;QACjD;gCAAG,EAAE;IAEL,OAAO,CAAC,CAAC;AACX;GAdgB","debugId":null}},
    {"offset": {"line": 669, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/separator.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nSeparator.displayName = SeparatorPrimitive.Root.displayName\r\n\r\nexport { Separator }\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 742, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\r\n\r\nfunction Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport { Skeleton }\r\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 772, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/tooltip.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst TooltipProvider = TooltipPrimitive.Provider\r\n\r\nconst Tooltip = TooltipPrimitive.Root\r\n\r\nconst TooltipTrigger = TooltipPrimitive.Trigger\r\n\r\nconst TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\r\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,kBAAkB,sKAAA,CAAA,WAAyB;AAEjD,MAAM,UAAU,sKAAA,CAAA,OAAqB;AAErC,MAAM,iBAAiB,sKAAA,CAAA,UAAwB;AAE/C,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGpC,CAAC,EAAE,SAAS,EAAE,aAAa,CAAC,EAAE,GAAG,OAAO,EAAE,oBAC1C,6LAAC,sKAAA,CAAA,UAAwB;QACvB,KAAK;QACL,YAAY;QACZ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sYACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,sKAAA,CAAA,UAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 815, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/sidebar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { VariantProps, cva } from \"class-variance-authority\"\r\nimport { PanelLeft } from \"lucide-react\"\r\n\r\nimport { useIsMobile } from \"@/hooks/use-mobile\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Separator } from \"@/components/ui/separator\"\r\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\r\nimport { Skeleton } from \"@/components/ui/skeleton\"\r\nimport {\r\n  Tooltip,\r\n  TooltipContent,\r\n  TooltipProvider,\r\n  TooltipTrigger,\r\n} from \"@/components/ui/tooltip\"\r\n\r\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\r\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\r\nconst SIDEBAR_WIDTH = \"16rem\"\r\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\r\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\r\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\r\n\r\ntype SidebarContext = {\r\n  state: \"expanded\" | \"collapsed\"\r\n  open: boolean\r\n  setOpen: (open: boolean) => void\r\n  openMobile: boolean\r\n  setOpenMobile: (open: boolean) => void\r\n  isMobile: boolean\r\n  toggleSidebar: () => void\r\n}\r\n\r\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\r\n\r\nfunction useSidebar() {\r\n  const context = React.useContext(SidebarContext)\r\n  if (!context) {\r\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\r\n  }\r\n\r\n  return context\r\n}\r\n\r\nconst SidebarProvider = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    defaultOpen?: boolean\r\n    open?: boolean\r\n    onOpenChange?: (open: boolean) => void\r\n  }\r\n>(\r\n  (\r\n    {\r\n      defaultOpen = true,\r\n      open: openProp,\r\n      onOpenChange: setOpenProp,\r\n      className,\r\n      style,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const isMobile = useIsMobile()\r\n    const [openMobile, setOpenMobile] = React.useState(false)\r\n\r\n    // This is the internal state of the sidebar.\r\n    // We use openProp and setOpenProp for control from outside the component.\r\n    const [_open, _setOpen] = React.useState(defaultOpen)\r\n    const open = openProp ?? _open\r\n    const setOpen = React.useCallback(\r\n      (value: boolean | ((value: boolean) => boolean)) => {\r\n        const openState = typeof value === \"function\" ? value(open) : value\r\n        if (setOpenProp) {\r\n          setOpenProp(openState)\r\n        } else {\r\n          _setOpen(openState)\r\n        }\r\n\r\n        // This sets the cookie to keep the sidebar state.\r\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\r\n      },\r\n      [setOpenProp, open]\r\n    )\r\n\r\n    // Helper to toggle the sidebar.\r\n    const toggleSidebar = React.useCallback(() => {\r\n      return isMobile\r\n        ? setOpenMobile((open) => !open)\r\n        : setOpen((open) => !open)\r\n    }, [isMobile, setOpen, setOpenMobile])\r\n\r\n    // Adds a keyboard shortcut to toggle the sidebar.\r\n    React.useEffect(() => {\r\n      const handleKeyDown = (event: KeyboardEvent) => {\r\n        if (\r\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\r\n          (event.metaKey || event.ctrlKey)\r\n        ) {\r\n          event.preventDefault()\r\n          toggleSidebar()\r\n        }\r\n      }\r\n\r\n      window.addEventListener(\"keydown\", handleKeyDown)\r\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\r\n    }, [toggleSidebar])\r\n\r\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\r\n    // This makes it easier to style the sidebar with Tailwind classes.\r\n    const state = open ? \"expanded\" : \"collapsed\"\r\n\r\n    const contextValue = React.useMemo<SidebarContext>(\r\n      () => ({\r\n        state,\r\n        open,\r\n        setOpen,\r\n        isMobile,\r\n        openMobile,\r\n        setOpenMobile,\r\n        toggleSidebar,\r\n      }),\r\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\r\n    )\r\n\r\n    return (\r\n      <SidebarContext.Provider value={contextValue}>\r\n        <TooltipProvider delayDuration={0}>\r\n          <div\r\n            style={\r\n              {\r\n                \"--sidebar-width\": SIDEBAR_WIDTH,\r\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\r\n                ...style,\r\n              } as React.CSSProperties\r\n            }\r\n            className={cn(\r\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\r\n              className\r\n            )}\r\n            ref={ref}\r\n            {...props}\r\n          >\r\n            {children}\r\n          </div>\r\n        </TooltipProvider>\r\n      </SidebarContext.Provider>\r\n    )\r\n  }\r\n)\r\nSidebarProvider.displayName = \"SidebarProvider\"\r\n\r\nconst Sidebar = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    side?: \"left\" | \"right\"\r\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\r\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\r\n  }\r\n>(\r\n  (\r\n    {\r\n      side = \"left\",\r\n      variant = \"sidebar\",\r\n      collapsible = \"offcanvas\",\r\n      className,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\r\n\r\n    if (collapsible === \"none\") {\r\n      return (\r\n        <div\r\n          className={cn(\r\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\r\n            className\r\n          )}\r\n          ref={ref}\r\n          {...props}\r\n        >\r\n          {children}\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (isMobile) {\r\n      return (\r\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\r\n          <SheetContent\r\n            data-sidebar=\"sidebar\"\r\n            data-mobile=\"true\"\r\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\r\n            style={\r\n              {\r\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\r\n              } as React.CSSProperties\r\n            }\r\n            side={side}\r\n          >\r\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\r\n          </SheetContent>\r\n        </Sheet>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className=\"group peer hidden md:block text-sidebar-foreground\"\r\n        data-state={state}\r\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\r\n        data-variant={variant}\r\n        data-side={side}\r\n      >\r\n        {/* This is what handles the sidebar gap on desktop */}\r\n        <div\r\n          className={cn(\r\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\r\n            \"group-data-[collapsible=offcanvas]:w-0\",\r\n            \"group-data-[side=right]:rotate-180\",\r\n            variant === \"floating\" || variant === \"inset\"\r\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\r\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\r\n          )}\r\n        />\r\n        <div\r\n          className={cn(\r\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\r\n            side === \"left\"\r\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\r\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\r\n            // Adjust the padding for floating and inset variants.\r\n            variant === \"floating\" || variant === \"inset\"\r\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\r\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\r\n            className\r\n          )}\r\n          {...props}\r\n        >\r\n          <div\r\n            data-sidebar=\"sidebar\"\r\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\r\n          >\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n)\r\nSidebar.displayName = \"Sidebar\"\r\n\r\nconst SidebarTrigger = React.forwardRef<\r\n  React.ElementRef<typeof Button>,\r\n  React.ComponentProps<typeof Button>\r\n>(({ className, onClick, ...props }, ref) => {\r\n  const { toggleSidebar } = useSidebar()\r\n\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      data-sidebar=\"trigger\"\r\n      variant=\"ghost\"\r\n      size=\"icon\"\r\n      className={cn(\"h-7 w-7\", className)}\r\n      onClick={(event) => {\r\n        onClick?.(event)\r\n        toggleSidebar()\r\n      }}\r\n      {...props}\r\n    >\r\n      <PanelLeft />\r\n      <span className=\"sr-only\">Toggle Sidebar</span>\r\n    </Button>\r\n  )\r\n})\r\nSidebarTrigger.displayName = \"SidebarTrigger\"\r\n\r\nconst SidebarRail = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<\"button\">\r\n>(({ className, ...props }, ref) => {\r\n  const { toggleSidebar } = useSidebar()\r\n\r\n  return (\r\n    <button\r\n      ref={ref}\r\n      data-sidebar=\"rail\"\r\n      aria-label=\"Toggle Sidebar\"\r\n      tabIndex={-1}\r\n      onClick={toggleSidebar}\r\n      title=\"Toggle Sidebar\"\r\n      className={cn(\r\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\r\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\r\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\r\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\r\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\r\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarRail.displayName = \"SidebarRail\"\r\n\r\nconst SidebarInset = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"main\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <main\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\r\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarInset.displayName = \"SidebarInset\"\r\n\r\nconst SidebarInput = React.forwardRef<\r\n  React.ElementRef<typeof Input>,\r\n  React.ComponentProps<typeof Input>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <Input\r\n      ref={ref}\r\n      data-sidebar=\"input\"\r\n      className={cn(\r\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarInput.displayName = \"SidebarInput\"\r\n\r\nconst SidebarHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"header\"\r\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarHeader.displayName = \"SidebarHeader\"\r\n\r\nconst SidebarFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"footer\"\r\n      className={cn(\"mt-auto flex flex-col gap-2 p-2\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarFooter.displayName = \"SidebarFooter\"\r\n\r\nconst SidebarSeparator = React.forwardRef<\r\n  React.ElementRef<typeof Separator>,\r\n  React.ComponentProps<typeof Separator>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <Separator\r\n      ref={ref}\r\n      data-sidebar=\"separator\"\r\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarSeparator.displayName = \"SidebarSeparator\"\r\n\r\nconst SidebarContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"content\"\r\n      className={cn(\r\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden p-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarContent.displayName = \"SidebarContent\"\r\n\r\nconst SidebarGroup = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\">\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"group\"\r\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarGroup.displayName = \"SidebarGroup\"\r\n\r\nconst SidebarGroupLabel = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\r\n>(({ className, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"div\"\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"group-label\"\r\n      className={cn(\r\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\r\n\r\nconst SidebarGroupAction = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\r\n>(({ className, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"group-action\"\r\n      className={cn(\r\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\r\n        // Increases the hit area of the button on mobile.\r\n        \"after:absolute after:-inset-2 after:md:hidden\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\r\n\r\nconst SidebarGroupContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\">\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    data-sidebar=\"group-content\"\r\n    className={cn(\"w-full text-sm\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\r\n\r\nconst SidebarMenu = React.forwardRef<\r\n  HTMLUListElement,\r\n  React.ComponentProps<\"ul\">\r\n>(({ className, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    data-sidebar=\"menu\"\r\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSidebarMenu.displayName = \"SidebarMenu\"\r\n\r\nconst SidebarMenuItem = React.forwardRef<\r\n  HTMLLIElement,\r\n  React.ComponentProps<\"li\">\r\n>(({ className, ...props }, ref) => (\r\n  <li\r\n    ref={ref}\r\n    data-sidebar=\"menu-item\"\r\n    className={cn(\"group/menu-item relative\", className)}\r\n    {...props}\r\n  />\r\n))\r\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\r\n\r\nconst sidebarMenuButtonVariants = cva(\r\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\r\n        outline:\r\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\r\n      },\r\n      size: {\r\n        default: \"h-8 text-sm\",\r\n        sm: \"h-7 text-xs\",\r\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst SidebarMenuButton = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<\"button\"> & {\r\n    asChild?: boolean\r\n    isActive?: boolean\r\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\r\n  } & VariantProps<typeof sidebarMenuButtonVariants>\r\n>(\r\n  (\r\n    {\r\n      asChild = false,\r\n      isActive = false,\r\n      variant = \"default\",\r\n      size = \"default\",\r\n      tooltip,\r\n      className,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    const { isMobile, state } = useSidebar()\r\n\r\n    const button = (\r\n      <Comp\r\n        ref={ref}\r\n        data-sidebar=\"menu-button\"\r\n        data-size={size}\r\n        data-active={isActive}\r\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\r\n        {...props}\r\n      />\r\n    )\r\n\r\n    if (!tooltip) {\r\n      return button\r\n    }\r\n\r\n    if (typeof tooltip === \"string\") {\r\n      tooltip = {\r\n        children: tooltip,\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Tooltip>\r\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\r\n        <TooltipContent\r\n          side=\"right\"\r\n          align=\"center\"\r\n          hidden={state !== \"collapsed\" || isMobile}\r\n          {...tooltip}\r\n        />\r\n      </Tooltip>\r\n    )\r\n  }\r\n)\r\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\r\n\r\nconst SidebarMenuAction = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<\"button\"> & {\r\n    asChild?: boolean\r\n    showOnHover?: boolean\r\n  }\r\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"menu-action\"\r\n      className={cn(\r\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\r\n        // Increases the hit area of the button on mobile.\r\n        \"after:absolute after:-inset-2 after:md:hidden\",\r\n        \"peer-data-[size=sm]/menu-button:top-1\",\r\n        \"peer-data-[size=default]/menu-button:top-1.5\",\r\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        showOnHover &&\r\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\r\n\r\nconst SidebarMenuBadge = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\">\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    data-sidebar=\"menu-badge\"\r\n    className={cn(\r\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\r\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\r\n      \"peer-data-[size=sm]/menu-button:top-1\",\r\n      \"peer-data-[size=default]/menu-button:top-1.5\",\r\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\r\n      \"group-data-[collapsible=icon]:hidden\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\r\n\r\nconst SidebarMenuSkeleton = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    showIcon?: boolean\r\n  }\r\n>(({ className, showIcon = false, ...props }, ref) => {\r\n  // Random width between 50 to 90%.\r\n  const width = React.useMemo(() => {\r\n    return `${Math.floor(Math.random() * 40) + 50}%`\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      data-sidebar=\"menu-skeleton\"\r\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\r\n      {...props}\r\n    >\r\n      {showIcon && (\r\n        <Skeleton\r\n          className=\"size-4 rounded-md\"\r\n          data-sidebar=\"menu-skeleton-icon\"\r\n        />\r\n      )}\r\n      <Skeleton\r\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\r\n        data-sidebar=\"menu-skeleton-text\"\r\n        style={\r\n          {\r\n            \"--skeleton-width\": width,\r\n          } as React.CSSProperties\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n})\r\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\r\n\r\nconst SidebarMenuSub = React.forwardRef<\r\n  HTMLUListElement,\r\n  React.ComponentProps<\"ul\">\r\n>(({ className, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    data-sidebar=\"menu-sub\"\r\n    className={cn(\r\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\r\n      \"group-data-[collapsible=icon]:hidden\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\r\n\r\nconst SidebarMenuSubItem = React.forwardRef<\r\n  HTMLLIElement,\r\n  React.ComponentProps<\"li\">\r\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\r\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\r\n\r\nconst SidebarMenuSubButton = React.forwardRef<\r\n  HTMLAnchorElement,\r\n  React.ComponentProps<\"a\"> & {\r\n    asChild?: boolean\r\n    size?: \"sm\" | \"md\"\r\n    isActive?: boolean\r\n  }\r\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"a\"\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      data-sidebar=\"menu-sub-button\"\r\n      data-size={size}\r\n      data-active={isActive}\r\n      className={cn(\r\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\r\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\r\n        size === \"sm\" && \"text-xs\",\r\n        size === \"md\" && \"text-sm\",\r\n        \"group-data-[collapsible=icon]:hidden\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\r\n\r\nexport {\r\n  Sidebar,\r\n  SidebarContent,\r\n  SidebarFooter,\r\n  SidebarGroup,\r\n  SidebarGroupAction,\r\n  SidebarGroupContent,\r\n  SidebarGroupLabel,\r\n  SidebarHeader,\r\n  SidebarInput,\r\n  SidebarInset,\r\n  SidebarMenu,\r\n  SidebarMenuAction,\r\n  SidebarMenuBadge,\r\n  SidebarMenuButton,\r\n  SidebarMenuItem,\r\n  SidebarMenuSkeleton,\r\n  SidebarMenuSub,\r\n  SidebarMenuSubButton,\r\n  SidebarMenuSubItem,\r\n  SidebarProvider,\r\n  SidebarRail,\r\n  SidebarSeparator,\r\n  SidebarTrigger,\r\n  useSidebar,\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/AppHeader.tsx"],"sourcesContent":["'use client';\r\n\r\nimport Link from 'next/link';\r\nimport { Button } from '@/components/ui/button';\r\nimport { AppLogo } from '@/components/AppLogo';\r\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\r\nimport { Menu, Bot, LayoutDashboard } from 'lucide-react';\r\nimport { DarkModeToggle } from './DarkModeToggle';\r\nimport { SidebarTrigger } from './ui/sidebar';\r\nimport { useAuth } from '@/hooks/use-auth';\r\n\r\nconst AppHeader = ({ auth: showAuthNav = false }: { auth?: boolean }) => {\r\n  const { user, signOut } = useAuth();\r\n  const auth = user || showAuthNav;\r\n\r\n  const navLinks = [\r\n    { href: '#features', label: 'Features' },\r\n    { href: '#how-it-works', label: 'How It Works' },\r\n    { href: '#testimonials', label: 'Testimonials' },\r\n  ];\r\n\r\n  return (\r\n    <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n      <div className=\"container flex h-14 items-center px-4 md:px-6\">\r\n        <div className=\"mr-4 hidden md:flex\">\r\n          <Link href=\"/\" className=\"mr-6 flex items-center space-x-2\">\r\n            <AppLogo />\r\n          </Link>\r\n          {!auth && (\r\n            <nav className=\"flex items-center space-x-6 text-sm font-medium\">\r\n              {navLinks.map(link => (\r\n                <Link key={link.href} href={link.href} className=\"transition-colors hover:text-foreground/80 text-foreground/60\">\r\n                  {link.label}\r\n                </Link>\r\n              ))}\r\n            </nav>\r\n          )}\r\n        </div>\r\n\r\n        <Sheet>\r\n          <SheetTrigger asChild>\r\n            <Button variant=\"ghost\" className=\"mr-2 px-0 text-base hover:bg-transparent focus-visible:bg-transparent focus-visible:ring-0 focus-visible:ring-offset-0 md:hidden\">\r\n              <Menu className=\"h-5 w-5\" />\r\n              <span className=\"sr-only\">Toggle Menu</span>\r\n            </Button>\r\n          </SheetTrigger>\r\n          <SheetContent side=\"left\" className=\"pr-0\">\r\n            <Link href=\"/\" className=\"flex items-center pl-6\">\r\n              <AppLogo />\r\n            </Link>\r\n            <div className=\"my-4 h-[calc(100vh-8rem)] pb-10\">\r\n                {!auth && (\r\n                <div className=\"flex flex-col space-y-3 pl-6\">\r\n                    {navLinks.map(link => (\r\n                    <Link key={link.href} href={link.href} className=\"text-muted-foreground\">\r\n                        {link.label}\r\n                    </Link>\r\n                    ))}\r\n                </div>\r\n                )}\r\n            </div>\r\n             <div className=\"pl-6\">\r\n                <DarkModeToggle />\r\n              </div>\r\n          </SheetContent>\r\n        </Sheet>\r\n        \r\n        <div className=\"flex flex-1 items-center justify-between space-x-2 md:justify-end\">\r\n         <div className=\"hidden md:flex items-center gap-2\">\r\n            {auth && <SidebarTrigger />}\r\n            <DarkModeToggle />\r\n          </div>\r\n          {!user ? (\r\n            <nav className=\"flex items-center gap-2\">\r\n              <Button asChild variant=\"ghost\" size=\"sm\">\r\n                <Link href=\"/auth/sign-in\">Login</Link>\r\n              </Button>\r\n              <Button asChild size=\"sm\">\r\n                <Link href=\"/auth/sign-up\">Sign Up</Link>\r\n              </Button>\r\n            </nav>\r\n          ) : (\r\n             <nav className=\"flex items-center gap-1 md:gap-2\">\r\n                <Button asChild variant=\"ghost\" size=\"sm\" className=\"hidden sm:flex\">\r\n                    <Link href=\"/dashboard\"><LayoutDashboard className=\"w-4 h-4 mr-2\" />Dashboard</Link>\r\n                </Button>\r\n                <Button asChild size=\"sm\" className=\"hidden sm:flex\">\r\n                  <Link href=\"/preview\">Preview Resume <Bot className=\"w-4 h-4 ml-2\" /></Link>\r\n                </Button>\r\n                 <Button asChild variant=\"outline\" size=\"sm\" onClick={signOut}>\r\n                    <Link href=\"/\">Logout</Link>\r\n                </Button>\r\n              </nav>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1947, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2050, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\nimport { cva, type VariantProps } from \"class-variance-authority\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))\r\nLabel.displayName = LabelPrimitive.Root.displayName\r\n\r\nexport { Label }\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 2089, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport {cn} from '@/lib/utils';\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\r\n  ({className, ...props}, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = 'Textarea';\r\n\r\nexport {Textarea};\r\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/ai/flows/interview-coach.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview An AI-powered mock interview coach.\r\n *\r\n * - generateQuestions: Generates a list of interview questions for a job title.\r\n * - evaluateAnswer: Evaluates a user's answer to a specific question.\r\n * - summarizeInterview: Provides an overall score and summary for the entire interview.\r\n */\r\n\r\nimport { ai } from '@/ai/genkit';\r\nimport { z } from 'genkit';\r\n\r\n// Schema for generating questions\r\nconst GenerateQuestionsInputSchema = z.object({\r\n  jobTitle: z.string().describe('The job title the user is interviewing for.'),\r\n});\r\nexport type GenerateQuestionsInput = z.infer<typeof GenerateQuestionsInputSchema>;\r\n\r\nconst GenerateQuestionsOutputSchema = z.object({\r\n  questions: z.array(z.string()).describe('A list of 5-7 relevant interview questions.'),\r\n});\r\nexport type GenerateQuestionsOutput = z.infer<typeof GenerateQuestionsOutputSchema>;\r\n\r\n\r\n// Schema for evaluating an answer\r\nconst FeedbackSchema = z.object({\r\n    feedback: z.string().describe('Constructive, specific feedback on the user\\'s answer.'),\r\n    score: z.number().min(1).max(5).describe('A score from 1 to 5 on the quality of the answer.'),\r\n});\r\n\r\nconst EvaluateAnswerInputSchema = z.object({\r\n  jobTitle: z.string().describe('The job title for context.'),\r\n  question: z.string().describe('The interview question that was asked.'),\r\n  answer: z.string().describe(\"The user's answer to the question.\"),\r\n});\r\nexport type EvaluateAnswerInput = z.infer<typeof EvaluateAnswerInputSchema>;\r\n\r\nexport type EvaluateAnswerOutput = z.infer<typeof FeedbackSchema>;\r\n\r\n\r\n// Schema for summarizing the interview\r\nconst InterviewHistoryItemSchema = z.object({\r\n    question: z.string(),\r\n    answer: z.string(),\r\n    feedback: FeedbackSchema,\r\n});\r\n\r\nconst SummarizeInterviewInputSchema = z.object({\r\n    jobTitle: z.string().describe('The job title for context.'),\r\n    interviewHistory: z.array(InterviewHistoryItemSchema).describe('The full history of the interview session.'),\r\n});\r\nexport type SummarizeInterviewInput = z.infer<typeof SummarizeInterviewInputSchema>;\r\n\r\nconst SummarizeInterviewOutputSchema = z.object({\r\n    overallScore: z.number().min(0).max(100).describe('An overall score for the interview from 0 to 100.'),\r\n    summary: z.string().describe('A summary of the user\\'s performance, highlighting strengths and weaknesses.'),\r\n    suggestions: z.array(z.string()).describe('A list of actionable suggestions for improvement.'),\r\n});\r\nexport type SummarizeInterviewOutput = z.infer<typeof SummarizeInterviewOutputSchema>;\r\n\r\n\r\n// Exported functions\r\nexport async function generateQuestions(input: GenerateQuestionsInput): Promise<GenerateQuestionsOutput> {\r\n  return generateQuestionsFlow(input);\r\n}\r\n\r\nexport async function evaluateAnswer(input: EvaluateAnswerInput): Promise<EvaluateAnswerOutput> {\r\n  return evaluateAnswerFlow(input);\r\n}\r\n\r\nexport async function summarizeInterview(input: SummarizeInterviewInput): Promise<SummarizeInterviewOutput> {\r\n    return summarizeInterviewFlow(input);\r\n}\r\n\r\n\r\n// Internal Flows and Prompts\r\n\r\nconst generateQuestionsPrompt = ai.definePrompt({\r\n  name: 'generateInterviewQuestionsPrompt',\r\n  input: { schema: GenerateQuestionsInputSchema },\r\n  output: { schema: GenerateQuestionsOutputSchema },\r\n  prompt: `You are an expert HR manager and career coach specializing in interviews.\r\n  \r\n  Your task is to generate a list of 5 to 7 insightful and common interview questions for the following job title: {{{jobTitle}}}.\r\n\r\n  The questions should cover a range of topics, including behavioral, situational, and technical questions relevant to the role. Do not include more than 7 questions.\r\n  `,\r\n});\r\n\r\nconst generateQuestionsFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateQuestionsFlow',\r\n    inputSchema: GenerateQuestionsInputSchema,\r\n    outputSchema: GenerateQuestionsOutputSchema,\r\n  },\r\n  async (input) => {\r\n    const { output } = await generateQuestionsPrompt(input);\r\n    return output!;\r\n  }\r\n);\r\n\r\n\r\nconst evaluateAnswerPrompt = ai.definePrompt({\r\n    name: 'evaluateAnswerPrompt',\r\n    input: { schema: EvaluateAnswerInputSchema },\r\n    output: { schema: FeedbackSchema },\r\n    prompt: `You are an expert interview coach. Your task is to evaluate a user's answer to an interview question and provide constructive feedback.\r\n\r\n    **Job Title:** {{{jobTitle}}}\r\n    **Question:** \"{{{question}}}\"\r\n    **User's Answer:** \"{{{answer}}}\"\r\n\r\n    Evaluation Criteria:\r\n    1.  **Clarity and Conciseness:** Is the answer clear, structured, and to the point?\r\n    2.  **Relevance:** Does the answer directly address the question?\r\n    3.  **Impact (STAR Method):** Does the user effectively describe the Situation, Task, Action, and Result?\r\n    4.  **Confidence and Tone:** Does the answer project confidence and professionalism?\r\n\r\n    Based on these criteria, please provide:\r\n    1.  **Score:** A score from 1 (Needs significant improvement) to 5 (Excellent).\r\n    2.  **Feedback:** Specific, actionable feedback. Start with what was good about the answer, then suggest concrete improvements. Frame the feedback to be encouraging and helpful.\r\n    `\r\n});\r\n\r\nconst evaluateAnswerFlow = ai.defineFlow(\r\n    {\r\n        name: 'evaluateAnswerFlow',\r\n        inputSchema: EvaluateAnswerInputSchema,\r\n        outputSchema: FeedbackSchema,\r\n    },\r\n    async (input) => {\r\n        const { output } = await evaluateAnswerPrompt(input);\r\n        return output!;\r\n    }\r\n);\r\n\r\n\r\nconst summarizeInterviewPrompt = ai.definePrompt({\r\n    name: 'summarizeInterviewPrompt',\r\n    input: { schema: SummarizeInterviewInputSchema },\r\n    output: { schema: SummarizeInterviewOutputSchema },\r\n    prompt: `You are a master career coach who has just observed a mock interview session for the role of **{{{jobTitle}}}**. Your task is to provide a final report card for the user based on their performance across all questions.\r\n\r\n    Here is the full transcript of the interview:\r\n    {{#each interviewHistory}}\r\n    ---\r\n    **Question:** {{question}}\r\n    **Answer:** {{answer}}\r\n    **Individual Feedback:** (Score: {{feedback.score}}/5) {{feedback.feedback}}\r\n    ---\r\n    {{/each}}\r\n\r\n    Instructions for your final analysis:\r\n    1.  **Review Holistically:** Do not just repeat the individual feedback. Synthesize the results to identify patterns. Did the user consistently struggle with being concise? Did they excel at providing data-driven results?\r\n    2.  **Calculate Overall Score:** Based on the individual scores and your overall impression, calculate a final score for the interview out of 100.\r\n    3.  **Write a Summary:** Provide a brief summary of the user's performance. Start with their key strengths and then transition to their main areas for improvement.\r\n    4.  **Give Actionable Suggestions:** Provide a list of 3-5 high-level, actionable suggestions that would most improve their interview performance.\r\n    `\r\n});\r\n\r\nconst summarizeInterviewFlow = ai.defineFlow(\r\n    {\r\n        name: 'summarizeInterviewFlow',\r\n        inputSchema: SummarizeInterviewInputSchema,\r\n        outputSchema: SummarizeInterviewOutputSchema,\r\n    },\r\n    async (input) => {\r\n        const { output } = await summarizeInterviewPrompt(input);\r\n        return output!;\r\n    }\r\n);\r\n"],"names":[],"mappings":";;;;;;IA+DsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/ai/flows/interview-coach.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview An AI-powered mock interview coach.\r\n *\r\n * - generateQuestions: Generates a list of interview questions for a job title.\r\n * - evaluateAnswer: Evaluates a user's answer to a specific question.\r\n * - summarizeInterview: Provides an overall score and summary for the entire interview.\r\n */\r\n\r\nimport { ai } from '@/ai/genkit';\r\nimport { z } from 'genkit';\r\n\r\n// Schema for generating questions\r\nconst GenerateQuestionsInputSchema = z.object({\r\n  jobTitle: z.string().describe('The job title the user is interviewing for.'),\r\n});\r\nexport type GenerateQuestionsInput = z.infer<typeof GenerateQuestionsInputSchema>;\r\n\r\nconst GenerateQuestionsOutputSchema = z.object({\r\n  questions: z.array(z.string()).describe('A list of 5-7 relevant interview questions.'),\r\n});\r\nexport type GenerateQuestionsOutput = z.infer<typeof GenerateQuestionsOutputSchema>;\r\n\r\n\r\n// Schema for evaluating an answer\r\nconst FeedbackSchema = z.object({\r\n    feedback: z.string().describe('Constructive, specific feedback on the user\\'s answer.'),\r\n    score: z.number().min(1).max(5).describe('A score from 1 to 5 on the quality of the answer.'),\r\n});\r\n\r\nconst EvaluateAnswerInputSchema = z.object({\r\n  jobTitle: z.string().describe('The job title for context.'),\r\n  question: z.string().describe('The interview question that was asked.'),\r\n  answer: z.string().describe(\"The user's answer to the question.\"),\r\n});\r\nexport type EvaluateAnswerInput = z.infer<typeof EvaluateAnswerInputSchema>;\r\n\r\nexport type EvaluateAnswerOutput = z.infer<typeof FeedbackSchema>;\r\n\r\n\r\n// Schema for summarizing the interview\r\nconst InterviewHistoryItemSchema = z.object({\r\n    question: z.string(),\r\n    answer: z.string(),\r\n    feedback: FeedbackSchema,\r\n});\r\n\r\nconst SummarizeInterviewInputSchema = z.object({\r\n    jobTitle: z.string().describe('The job title for context.'),\r\n    interviewHistory: z.array(InterviewHistoryItemSchema).describe('The full history of the interview session.'),\r\n});\r\nexport type SummarizeInterviewInput = z.infer<typeof SummarizeInterviewInputSchema>;\r\n\r\nconst SummarizeInterviewOutputSchema = z.object({\r\n    overallScore: z.number().min(0).max(100).describe('An overall score for the interview from 0 to 100.'),\r\n    summary: z.string().describe('A summary of the user\\'s performance, highlighting strengths and weaknesses.'),\r\n    suggestions: z.array(z.string()).describe('A list of actionable suggestions for improvement.'),\r\n});\r\nexport type SummarizeInterviewOutput = z.infer<typeof SummarizeInterviewOutputSchema>;\r\n\r\n\r\n// Exported functions\r\nexport async function generateQuestions(input: GenerateQuestionsInput): Promise<GenerateQuestionsOutput> {\r\n  return generateQuestionsFlow(input);\r\n}\r\n\r\nexport async function evaluateAnswer(input: EvaluateAnswerInput): Promise<EvaluateAnswerOutput> {\r\n  return evaluateAnswerFlow(input);\r\n}\r\n\r\nexport async function summarizeInterview(input: SummarizeInterviewInput): Promise<SummarizeInterviewOutput> {\r\n    return summarizeInterviewFlow(input);\r\n}\r\n\r\n\r\n// Internal Flows and Prompts\r\n\r\nconst generateQuestionsPrompt = ai.definePrompt({\r\n  name: 'generateInterviewQuestionsPrompt',\r\n  input: { schema: GenerateQuestionsInputSchema },\r\n  output: { schema: GenerateQuestionsOutputSchema },\r\n  prompt: `You are an expert HR manager and career coach specializing in interviews.\r\n  \r\n  Your task is to generate a list of 5 to 7 insightful and common interview questions for the following job title: {{{jobTitle}}}.\r\n\r\n  The questions should cover a range of topics, including behavioral, situational, and technical questions relevant to the role. Do not include more than 7 questions.\r\n  `,\r\n});\r\n\r\nconst generateQuestionsFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateQuestionsFlow',\r\n    inputSchema: GenerateQuestionsInputSchema,\r\n    outputSchema: GenerateQuestionsOutputSchema,\r\n  },\r\n  async (input) => {\r\n    const { output } = await generateQuestionsPrompt(input);\r\n    return output!;\r\n  }\r\n);\r\n\r\n\r\nconst evaluateAnswerPrompt = ai.definePrompt({\r\n    name: 'evaluateAnswerPrompt',\r\n    input: { schema: EvaluateAnswerInputSchema },\r\n    output: { schema: FeedbackSchema },\r\n    prompt: `You are an expert interview coach. Your task is to evaluate a user's answer to an interview question and provide constructive feedback.\r\n\r\n    **Job Title:** {{{jobTitle}}}\r\n    **Question:** \"{{{question}}}\"\r\n    **User's Answer:** \"{{{answer}}}\"\r\n\r\n    Evaluation Criteria:\r\n    1.  **Clarity and Conciseness:** Is the answer clear, structured, and to the point?\r\n    2.  **Relevance:** Does the answer directly address the question?\r\n    3.  **Impact (STAR Method):** Does the user effectively describe the Situation, Task, Action, and Result?\r\n    4.  **Confidence and Tone:** Does the answer project confidence and professionalism?\r\n\r\n    Based on these criteria, please provide:\r\n    1.  **Score:** A score from 1 (Needs significant improvement) to 5 (Excellent).\r\n    2.  **Feedback:** Specific, actionable feedback. Start with what was good about the answer, then suggest concrete improvements. Frame the feedback to be encouraging and helpful.\r\n    `\r\n});\r\n\r\nconst evaluateAnswerFlow = ai.defineFlow(\r\n    {\r\n        name: 'evaluateAnswerFlow',\r\n        inputSchema: EvaluateAnswerInputSchema,\r\n        outputSchema: FeedbackSchema,\r\n    },\r\n    async (input) => {\r\n        const { output } = await evaluateAnswerPrompt(input);\r\n        return output!;\r\n    }\r\n);\r\n\r\n\r\nconst summarizeInterviewPrompt = ai.definePrompt({\r\n    name: 'summarizeInterviewPrompt',\r\n    input: { schema: SummarizeInterviewInputSchema },\r\n    output: { schema: SummarizeInterviewOutputSchema },\r\n    prompt: `You are a master career coach who has just observed a mock interview session for the role of **{{{jobTitle}}}**. Your task is to provide a final report card for the user based on their performance across all questions.\r\n\r\n    Here is the full transcript of the interview:\r\n    {{#each interviewHistory}}\r\n    ---\r\n    **Question:** {{question}}\r\n    **Answer:** {{answer}}\r\n    **Individual Feedback:** (Score: {{feedback.score}}/5) {{feedback.feedback}}\r\n    ---\r\n    {{/each}}\r\n\r\n    Instructions for your final analysis:\r\n    1.  **Review Holistically:** Do not just repeat the individual feedback. Synthesize the results to identify patterns. Did the user consistently struggle with being concise? Did they excel at providing data-driven results?\r\n    2.  **Calculate Overall Score:** Based on the individual scores and your overall impression, calculate a final score for the interview out of 100.\r\n    3.  **Write a Summary:** Provide a brief summary of the user's performance. Start with their key strengths and then transition to their main areas for improvement.\r\n    4.  **Give Actionable Suggestions:** Provide a list of 3-5 high-level, actionable suggestions that would most improve their interview performance.\r\n    `\r\n});\r\n\r\nconst summarizeInterviewFlow = ai.defineFlow(\r\n    {\r\n        name: 'summarizeInterviewFlow',\r\n        inputSchema: SummarizeInterviewInputSchema,\r\n        outputSchema: SummarizeInterviewOutputSchema,\r\n    },\r\n    async (input) => {\r\n        const { output } = await summarizeInterviewPrompt(input);\r\n        return output!;\r\n    }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAmEsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2156, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/ai/flows/interview-coach.ts"],"sourcesContent":["'use server';\r\n\r\n/**\r\n * @fileOverview An AI-powered mock interview coach.\r\n *\r\n * - generateQuestions: Generates a list of interview questions for a job title.\r\n * - evaluateAnswer: Evaluates a user's answer to a specific question.\r\n * - summarizeInterview: Provides an overall score and summary for the entire interview.\r\n */\r\n\r\nimport { ai } from '@/ai/genkit';\r\nimport { z } from 'genkit';\r\n\r\n// Schema for generating questions\r\nconst GenerateQuestionsInputSchema = z.object({\r\n  jobTitle: z.string().describe('The job title the user is interviewing for.'),\r\n});\r\nexport type GenerateQuestionsInput = z.infer<typeof GenerateQuestionsInputSchema>;\r\n\r\nconst GenerateQuestionsOutputSchema = z.object({\r\n  questions: z.array(z.string()).describe('A list of 5-7 relevant interview questions.'),\r\n});\r\nexport type GenerateQuestionsOutput = z.infer<typeof GenerateQuestionsOutputSchema>;\r\n\r\n\r\n// Schema for evaluating an answer\r\nconst FeedbackSchema = z.object({\r\n    feedback: z.string().describe('Constructive, specific feedback on the user\\'s answer.'),\r\n    score: z.number().min(1).max(5).describe('A score from 1 to 5 on the quality of the answer.'),\r\n});\r\n\r\nconst EvaluateAnswerInputSchema = z.object({\r\n  jobTitle: z.string().describe('The job title for context.'),\r\n  question: z.string().describe('The interview question that was asked.'),\r\n  answer: z.string().describe(\"The user's answer to the question.\"),\r\n});\r\nexport type EvaluateAnswerInput = z.infer<typeof EvaluateAnswerInputSchema>;\r\n\r\nexport type EvaluateAnswerOutput = z.infer<typeof FeedbackSchema>;\r\n\r\n\r\n// Schema for summarizing the interview\r\nconst InterviewHistoryItemSchema = z.object({\r\n    question: z.string(),\r\n    answer: z.string(),\r\n    feedback: FeedbackSchema,\r\n});\r\n\r\nconst SummarizeInterviewInputSchema = z.object({\r\n    jobTitle: z.string().describe('The job title for context.'),\r\n    interviewHistory: z.array(InterviewHistoryItemSchema).describe('The full history of the interview session.'),\r\n});\r\nexport type SummarizeInterviewInput = z.infer<typeof SummarizeInterviewInputSchema>;\r\n\r\nconst SummarizeInterviewOutputSchema = z.object({\r\n    overallScore: z.number().min(0).max(100).describe('An overall score for the interview from 0 to 100.'),\r\n    summary: z.string().describe('A summary of the user\\'s performance, highlighting strengths and weaknesses.'),\r\n    suggestions: z.array(z.string()).describe('A list of actionable suggestions for improvement.'),\r\n});\r\nexport type SummarizeInterviewOutput = z.infer<typeof SummarizeInterviewOutputSchema>;\r\n\r\n\r\n// Exported functions\r\nexport async function generateQuestions(input: GenerateQuestionsInput): Promise<GenerateQuestionsOutput> {\r\n  return generateQuestionsFlow(input);\r\n}\r\n\r\nexport async function evaluateAnswer(input: EvaluateAnswerInput): Promise<EvaluateAnswerOutput> {\r\n  return evaluateAnswerFlow(input);\r\n}\r\n\r\nexport async function summarizeInterview(input: SummarizeInterviewInput): Promise<SummarizeInterviewOutput> {\r\n    return summarizeInterviewFlow(input);\r\n}\r\n\r\n\r\n// Internal Flows and Prompts\r\n\r\nconst generateQuestionsPrompt = ai.definePrompt({\r\n  name: 'generateInterviewQuestionsPrompt',\r\n  input: { schema: GenerateQuestionsInputSchema },\r\n  output: { schema: GenerateQuestionsOutputSchema },\r\n  prompt: `You are an expert HR manager and career coach specializing in interviews.\r\n  \r\n  Your task is to generate a list of 5 to 7 insightful and common interview questions for the following job title: {{{jobTitle}}}.\r\n\r\n  The questions should cover a range of topics, including behavioral, situational, and technical questions relevant to the role. Do not include more than 7 questions.\r\n  `,\r\n});\r\n\r\nconst generateQuestionsFlow = ai.defineFlow(\r\n  {\r\n    name: 'generateQuestionsFlow',\r\n    inputSchema: GenerateQuestionsInputSchema,\r\n    outputSchema: GenerateQuestionsOutputSchema,\r\n  },\r\n  async (input) => {\r\n    const { output } = await generateQuestionsPrompt(input);\r\n    return output!;\r\n  }\r\n);\r\n\r\n\r\nconst evaluateAnswerPrompt = ai.definePrompt({\r\n    name: 'evaluateAnswerPrompt',\r\n    input: { schema: EvaluateAnswerInputSchema },\r\n    output: { schema: FeedbackSchema },\r\n    prompt: `You are an expert interview coach. Your task is to evaluate a user's answer to an interview question and provide constructive feedback.\r\n\r\n    **Job Title:** {{{jobTitle}}}\r\n    **Question:** \"{{{question}}}\"\r\n    **User's Answer:** \"{{{answer}}}\"\r\n\r\n    Evaluation Criteria:\r\n    1.  **Clarity and Conciseness:** Is the answer clear, structured, and to the point?\r\n    2.  **Relevance:** Does the answer directly address the question?\r\n    3.  **Impact (STAR Method):** Does the user effectively describe the Situation, Task, Action, and Result?\r\n    4.  **Confidence and Tone:** Does the answer project confidence and professionalism?\r\n\r\n    Based on these criteria, please provide:\r\n    1.  **Score:** A score from 1 (Needs significant improvement) to 5 (Excellent).\r\n    2.  **Feedback:** Specific, actionable feedback. Start with what was good about the answer, then suggest concrete improvements. Frame the feedback to be encouraging and helpful.\r\n    `\r\n});\r\n\r\nconst evaluateAnswerFlow = ai.defineFlow(\r\n    {\r\n        name: 'evaluateAnswerFlow',\r\n        inputSchema: EvaluateAnswerInputSchema,\r\n        outputSchema: FeedbackSchema,\r\n    },\r\n    async (input) => {\r\n        const { output } = await evaluateAnswerPrompt(input);\r\n        return output!;\r\n    }\r\n);\r\n\r\n\r\nconst summarizeInterviewPrompt = ai.definePrompt({\r\n    name: 'summarizeInterviewPrompt',\r\n    input: { schema: SummarizeInterviewInputSchema },\r\n    output: { schema: SummarizeInterviewOutputSchema },\r\n    prompt: `You are a master career coach who has just observed a mock interview session for the role of **{{{jobTitle}}}**. Your task is to provide a final report card for the user based on their performance across all questions.\r\n\r\n    Here is the full transcript of the interview:\r\n    {{#each interviewHistory}}\r\n    ---\r\n    **Question:** {{question}}\r\n    **Answer:** {{answer}}\r\n    **Individual Feedback:** (Score: {{feedback.score}}/5) {{feedback.feedback}}\r\n    ---\r\n    {{/each}}\r\n\r\n    Instructions for your final analysis:\r\n    1.  **Review Holistically:** Do not just repeat the individual feedback. Synthesize the results to identify patterns. Did the user consistently struggle with being concise? Did they excel at providing data-driven results?\r\n    2.  **Calculate Overall Score:** Based on the individual scores and your overall impression, calculate a final score for the interview out of 100.\r\n    3.  **Write a Summary:** Provide a brief summary of the user's performance. Start with their key strengths and then transition to their main areas for improvement.\r\n    4.  **Give Actionable Suggestions:** Provide a list of 3-5 high-level, actionable suggestions that would most improve their interview performance.\r\n    `\r\n});\r\n\r\nconst summarizeInterviewFlow = ai.defineFlow(\r\n    {\r\n        name: 'summarizeInterviewFlow',\r\n        inputSchema: SummarizeInterviewInputSchema,\r\n        outputSchema: SummarizeInterviewOutputSchema,\r\n    },\r\n    async (input) => {\r\n        const { output } = await summarizeInterviewPrompt(input);\r\n        return output!;\r\n    }\r\n);\r\n"],"names":[],"mappings":";;;;;;IAuEsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 2172, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Lenovo/OneDrive/Desktop/New%20folder%20%284%29/Careerpilot/src/app/interview/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport AppHeader from '@/components/AppHeader';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { useToast } from '@/hooks/use-toast';\r\nimport { generateQuestions, evaluateAnswer, summarizeInterview, type EvaluateAnswerOutput, type SummarizeInterviewOutput } from '@/ai/flows/interview-coach';\r\nimport { SidebarProvider } from '@/components/ui/sidebar';\r\nimport { ArrowLeft, ArrowRight, Bot, Lightbulb, MessageSquare, Sparkles, Star, Award, CheckCircle } from 'lucide-react';\r\nimport { Skeleton } from '@/components/ui/skeleton';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\ntype InterviewHistoryItem = {\r\n    question: string;\r\n    answer: string;\r\n    feedback: EvaluateAnswerOutput;\r\n};\r\n\r\nexport default function InterviewPage() {\r\n  const router = useRouter();\r\n  const { toast } = useToast();\r\n  const [jobTitle, setJobTitle] = useState('');\r\n  const [questions, setQuestions] = useState<string[]>([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [feedback, setFeedback] = useState<EvaluateAnswerOutput | null>(null);\r\n  const [interviewHistory, setInterviewHistory] = useState<InterviewHistoryItem[]>([]);\r\n  const [summary, setSummary] = useState<SummarizeInterviewOutput | null>(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isEvaluating, setIsEvaluating] = useState(false);\r\n  const [isSummarizing, setIsSummarizing] = useState(false);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const [isFinished, setIsFinished] = useState(false);\r\n\r\n  const handleStartInterview = async () => {\r\n    if (!jobTitle) {\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Job Title Required',\r\n        description: 'Please enter a job title to start the interview.',\r\n      });\r\n      return;\r\n    }\r\n    setIsLoading(true);\r\n    setQuestions([]);\r\n    try {\r\n      const result = await generateQuestions({ jobTitle });\r\n      setQuestions(result.questions);\r\n      setIsStarted(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Error',\r\n        description: 'Failed to generate questions. Please try again.',\r\n      });\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n  \r\n  const handleEvaluateAnswer = async () => {\r\n    if (!userAnswer) {\r\n      toast({\r\n        variant: 'destructive',\r\n        title: 'Answer Required',\r\n        description: 'Please provide an answer before getting feedback.',\r\n      });\r\n      return;\r\n    }\r\n    setIsEvaluating(true);\r\n    setFeedback(null);\r\n    try {\r\n      const result = await evaluateAnswer({\r\n        jobTitle,\r\n        question: questions[currentQuestionIndex],\r\n        answer: userAnswer,\r\n      });\r\n      setFeedback(result);\r\n      setInterviewHistory([...interviewHistory, { question: questions[currentQuestionIndex], answer: userAnswer, feedback: result }]);\r\n    } catch (error) {\r\n        console.error(error);\r\n        toast({\r\n            variant: 'destructive',\r\n            title: 'Evaluation Failed',\r\n            description: 'Could not evaluate your answer. Please try again.',\r\n        });\r\n    }\r\n    setIsEvaluating(false);\r\n  }\r\n  \r\n  const handleNextQuestion = async () => {\r\n    if (currentQuestionIndex < questions.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setUserAnswer('');\r\n      setFeedback(null);\r\n    } else {\r\n        setIsFinished(true);\r\n        setIsSummarizing(true);\r\n        try {\r\n            const result = await summarizeInterview({ jobTitle, interviewHistory });\r\n            setSummary(result);\r\n        } catch (error) {\r\n            console.error(error);\r\n            toast({\r\n                variant: 'destructive',\r\n                title: 'Summarization Failed',\r\n                description: 'Could not generate your interview summary. Please try again.',\r\n            });\r\n        }\r\n        setIsSummarizing(false);\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setIsStarted(false);\r\n    setIsFinished(false);\r\n    setJobTitle('');\r\n    setQuestions([]);\r\n    setCurrentQuestionIndex(0);\r\n    setUserAnswer('');\r\n    setFeedback(null);\r\n    setInterviewHistory([]);\r\n    setSummary(null);\r\n  }\r\n  \r\n  const renderStars = (score: number) => {\r\n    return (\r\n      <div className=\"flex\">\r\n        {[...Array(5)].map((_, i) => (\r\n          <Star\r\n            key={i}\r\n            className={`h-5 w-5 ${i < score ? 'text-yellow-400 fill-current' : 'text-gray-300'}`}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getScoreColor = (score: number) => {\r\n    if (score < 50) return '#ef4444'; // red-500\r\n    if (score < 80) return '#f97316'; // orange-500\r\n    return 'hsl(var(--primary))'; // green-500\r\n  }\r\n\r\n  const renderSetupScreen = () => (\r\n     <div className=\"max-w-xl mx-auto\">\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle className=\"font-heading text-3xl flex items-center justify-center\">\r\n                    <MessageSquare className=\"mr-3 h-8 w-8 text-primary\" />\r\n                    AI Mock Interview\r\n                </CardTitle>\r\n                <CardDescription className=\"text-center\">\r\n                    Practice for your next interview. Enter a job title, and our AI coach will ask you relevant questions and provide instant feedback.\r\n                </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n                 <div className=\"space-y-2\">\r\n                    <Label htmlFor=\"job-title-interview\">Job Title You're Interviewing For</Label>\r\n                    <Input\r\n                        id=\"job-title-interview\"\r\n                        placeholder=\"e.g., Senior Software Engineer\"\r\n                        value={jobTitle}\r\n                        onChange={(e) => setJobTitle(e.target.value)}\r\n                        disabled={isLoading}\r\n                    />\r\n                </div>\r\n                <Button onClick={handleStartInterview} disabled={isLoading} className=\"w-full\" size=\"lg\">\r\n                    {isLoading ? 'Preparing Questions...' : 'Start Interview'}\r\n                </Button>\r\n            </CardContent>\r\n        </Card>\r\n     </div>\r\n  );\r\n  \r\n  const renderInterviewScreen = () => (\r\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n        <div>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"font-heading\">Question {currentQuestionIndex + 1} of {questions.length}</CardTitle>\r\n                    <CardDescription>Read the question below and type your answer. Be as detailed as you would be in a real interview.</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    <p className=\"text-lg font-semibold mb-4\">{questions[currentQuestionIndex]}</p>\r\n                    <Textarea \r\n                        value={userAnswer}\r\n                        onChange={(e) => setUserAnswer(e.target.value)}\r\n                        rows={10}\r\n                        placeholder=\"Type your answer here...\"\r\n                        className=\"text-base\"\r\n                        disabled={isEvaluating}\r\n                    />\r\n                    <div className=\"mt-4 flex flex-wrap gap-2 justify-between\">\r\n                         <Button onClick={handleEvaluateAnswer} disabled={isEvaluating || !userAnswer || !!feedback}>\r\n                            {isEvaluating ? 'Evaluating...' : 'Get Feedback'}\r\n                            <Sparkles className=\"ml-2 h-4 w-4\" />\r\n                        </Button>\r\n                         <Button onClick={handleNextQuestion} variant=\"secondary\" disabled={isEvaluating || !feedback}>\r\n                           {currentQuestionIndex < questions.length - 1 ? 'Next Question' : 'Finish & See Report'} <ArrowRight className=\"ml-2 h-4 w-4\" />\r\n                        </Button>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n        <div>\r\n             <Card className=\"sticky top-24\">\r\n                <CardHeader>\r\n                    <CardTitle className=\"font-heading flex items-center\">\r\n                        <Lightbulb className=\"mr-2 h-6 w-6 text-primary\" />AI Feedback\r\n                    </CardTitle>\r\n                     <CardDescription>Our AI coach's evaluation of your answer will appear here.</CardDescription>\r\n                </CardHeader>\r\n                <CardContent>\r\n                    {isEvaluating ? (\r\n                        <div className=\"space-y-4\">\r\n                            <Skeleton className=\"h-4 w-1/4\" />\r\n                            <Skeleton className=\"h-16 w-full\" />\r\n                        </div>\r\n                    ) : feedback ? (\r\n                        <div className=\"space-y-4\">\r\n                            <div className=\"flex justify-between items-center\">\r\n                                <h4 className=\"font-semibold\">Your Score:</h4>\r\n                                {renderStars(feedback.score)}\r\n                            </div>\r\n                            <div className=\"prose prose-sm dark:prose-invert max-w-none\">\r\n                                <p>{feedback.feedback}</p>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"text-center text-muted-foreground py-8\">\r\n                            <p>Your feedback will be shown here once you submit an answer.</p>\r\n                        </div>\r\n                    )}\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n  const renderSummaryScreen = () => (\r\n     <div className=\"max-w-3xl mx-auto\">\r\n        <Card>\r\n            <CardHeader className=\"text-center\">\r\n                <div className=\"mx-auto bg-primary/10 p-4 rounded-full w-fit mb-4\">\r\n                    <Award className=\"h-10 w-10 text-primary\" />\r\n                </div>\r\n                <CardTitle className=\"font-heading text-3xl\">Interview Report Card</CardTitle>\r\n                <CardDescription>\r\n                    Here's a summary of your performance for the **{jobTitle}** mock interview.\r\n                </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n                 {isSummarizing ? (\r\n                    <div className=\"flex flex-col items-center justify-center py-12\">\r\n                        <Bot className=\"h-12 w-12 animate-bounce text-primary\" />\r\n                        <p className=\"mt-4 text-muted-foreground\">Your personal AI coach is analyzing your results...</p>\r\n                    </div>\r\n                 ) : summary ? (\r\n                    <div className=\"space-y-6\">\r\n                        <div className=\"flex flex-col items-center\">\r\n                             <div className=\"w-48 h-48\">\r\n                                <CircularProgressbar\r\n                                    value={summary.overallScore}\r\n                                    text={`${summary.overallScore}`}\r\n                                    styles={buildStyles({\r\n                                        textSize: '20px',\r\n                                        pathTransitionDuration: 0.5,\r\n                                        pathColor: getScoreColor(summary.overallScore),\r\n                                        textColor: getScoreColor(summary.overallScore),\r\n                                        trailColor: 'hsl(var(--muted))',\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                            <p className=\"text-xl font-bold mt-4\">Overall Score</p>\r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <h3 className=\"font-heading text-xl font-semibold mb-2\">Performance Summary</h3>\r\n                            <p className=\"text-muted-foreground prose prose-sm dark:prose-invert max-w-none\">{summary.summary}</p>\r\n                        </div>\r\n\r\n                         <div>\r\n                            <h3 className=\"font-heading text-xl font-semibold mb-2\">Key Suggestions for Improvement</h3>\r\n                            <ul className=\"space-y-2\">\r\n                                {summary.suggestions.map((item, index) => (\r\n                                    <li key={index} className=\"flex items-start gap-3\">\r\n                                        <CheckCircle className=\"h-5 w-5 text-primary mt-1 flex-shrink-0\" />\r\n                                        <span className=\"text-muted-foreground\">{item}</span>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                 ) : (\r\n                    <p>Could not load summary.</p>\r\n                 )}\r\n            </CardContent>\r\n        </Card>\r\n     </div>\r\n  );\r\n\r\n  const renderContent = () => {\r\n    if (isFinished) {\r\n        return renderSummaryScreen();\r\n    }\r\n    if (isStarted) {\r\n        return renderInterviewScreen();\r\n    }\r\n    return renderSetupScreen();\r\n  }\r\n\r\n  return (\r\n    <SidebarProvider>\r\n      <div className=\"min-h-screen bg-muted/40\">\r\n        <AppHeader auth={true} />\r\n        <main className=\"container mx-auto px-4 py-8\">\r\n            <div className=\"mb-6\">\r\n                <Button variant=\"outline\" onClick={() => isStarted ? handleReset() : router.back()}>\r\n                  <ArrowLeft className=\"mr-2 h-4 w-4\" />\r\n                   {isStarted ? 'End Interview & Start Over' : 'Back to Dashboard'}\r\n                </Button>\r\n            </div>\r\n            {renderContent()}\r\n        </main>\r\n      </div>\r\n    </SidebarProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}